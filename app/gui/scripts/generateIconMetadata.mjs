import * as fs from 'node:fs/promises'

console.info('Reading icons from "./src/project-view/assets/icons.svg"...')
const icons = await fs.readFile('./src/project-view/assets/icons.svg', { encoding: 'utf-8' })
const iconNames = icons.match(/(?<=<symbol id=")[^"]+/gm) ?? []

await fs.mkdir('./src/project-view/util/iconMetadata', { recursive: true })

// All generated files MUST follow Prettier formatting.
console.info('Writing icon names to "./src/project-view/util/iconMetadata/iconName.ts"...')
await fs.writeFile(
  './src/project-view/util/iconMetadata/iconName.ts',
  `\
// Generated by \`scripts/generateIconMetadata.js\`.
// Please run \`bazel run //:write_all\` to regenerate this file whenever \`icons.svg\` is changed.

/** All icon names present in icons.svg. */
const iconNames = [
${iconNames?.map((name) => `  '${name}',`).join('\n')}
] as const

export type Icon = (typeof iconNames)[number]

const iconNamesSet = new Set<string>(iconNames)

/** Check if string is one of the valid icon names for SvgIcon. */
export function isIconName(value: string): value is Icon {
  return iconNamesSet.has(value)
}
`,
)
console.info('Done.')
